/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == nullptr || head -> next == nullptr) {
            return head;
        }
        
        ListNode* whereNow = head;
        ListNode* beginHere = head;
        while(whereNow -> next != nullptr) {
            if(whereNow -> next -> val == whereNow -> val) {
                beginHere = whereNow -> next;
                whereNow -> next = beginHere -> next;
                //delete beginHere;
            }
            else {
                whereNow = whereNow -> next;
            }
        }
        return head;
    }
};
