class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int nSize = nums.size();
        if(nSize == 0 || target <= nums.at(0)) {
            return 0;
        }
        else if(target > nums.at(nSize - 1)) {
            return nSize;
        }
        
        //Run binary search
        int left = 0;
        int right = nSize;
        int middle = 0;
        while(left <= right) {
            middle = left + (right - left) / 2;
            if(nums.at(middle) == target) {
                return middle;
            }
            if(nums.at(middle) > target) {
                right = middle - 1;
            }
            else {
                left = middle + 1;
            }
        }
        
        //Check if target above or below middle
        if(target < nums.at(middle) && target > nums.at(middle - 1)) {
            return middle;
        }
        else {
            return middle + 1;
        }
    }
};
