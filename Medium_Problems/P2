/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 -> val == 0 && l1 -> next == nullptr) {
            return l2;
        }
        else if(l2 -> val == 0 && l2 -> next == nullptr) {
            return l1;
        }
        
        bool carry = false;
        ListNode* head = l1;
        
        for(ListNode* iter = l2; iter != nullptr; iter = iter -> next) {
            l1 -> val += (iter -> val);
            if(carry) {
                l1 -> val += 1;
                carry = false;
            }
            if(l1 -> val >= 10) {
                carry = true;
                l1 -> val = (l1 -> val) - 10;
            }
            if(iter -> next != nullptr && l1 -> next == nullptr) {
                l1 -> next = new ListNode(0);
            }
            else if(iter -> next == nullptr && l1 -> next != nullptr) {
                iter -> next = new ListNode(0);
            }
            if(iter -> next == nullptr && l1 -> next == nullptr && carry) {
                l1 -> next = new ListNode(1);
            }
            l1 = l1 -> next;
        }
        return head;
    }
};
